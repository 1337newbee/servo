/*
 * Copyright (c) 2012. Netflix, Inc.
 *
 *     Licensed under the Apache License, Version 2.0 (the "License");
 *     you may not use this file except in compliance with the License.
 *     You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 *     Unless required by applicable law or agreed to in writing, software
 *     distributed under the License is distributed on an "AS IS" BASIS,
 *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *     See the License for the specific language governing permissions and
 *     limitations under the License.
 */



// Establish version and status
def performingRelease = project.hasProperty('release') && Boolean.parseBoolean(project.release)
def releaseVersion = '1.1.7'
def versionPostfix = performingRelease?'':'-SNAPSHOT'
version = "${releaseVersion}${versionPostfix}"
status = performingRelease?'release':'snapshot'

apply plugin: 'idea'

subprojects
        {
            apply plugin: 'java'
            apply plugin: 'idea'

            group = 'com.netflix.curator'
            version = rootProject.version

            sourceCompatibility = 1.6

            tasks.test.useTestNG()

            // GRADLE-2087 workaround, perform after java plugin
            status = rootProject.status

            repositories
                    {
                        mavenCentral()
                        maven
                                {
                                    url "https://repository.jboss.org/nexus/content/groups/public/"
                                }
                    }

            test.testLogging.showStandardStreams = project.hasProperty('log')

            dependencies
                    {
                        compile 'org.slf4j:slf4j-api:1.6.3'
                        compile 'com.google.guava:guava:[10,)'
                        testCompile 'org.testng:testng:6.1.1'
                    }

            task sourcesJar(type: Jar, dependsOn:classes) {
                classifier = 'sources'
                from sourceSets.main.allSource
            }

            task javadocJar(type: Jar, dependsOn:javadoc) {
                classifier = 'javadoc'
                from javadoc.destinationDir
            }

            artifacts {
                archives jar
                archives sourcesJar
                archives javadocJar
            }

            // Maven side of things
            apply plugin: 'maven' // Java plugin has to have been already applied for the conf2scope mappings to work
            apply plugin: 'signing'

            signing {
                required performingRelease
                sign configurations.archives
            }

            /**
             * Publishing to Maven Central example provided from http://jedicoder.blogspot.com/2011/11/automated-gradle-project-deployment-to.html
             */
            task uploadMavenCentral(type:Upload) {
                configuration = configurations.archives
                dependsOn signArchives
                doFirst {
                    repositories.mavenDeployer {
                        beforeDeployment { org.gradle.api.artifacts.maven.MavenDeployment deployment -> signing.signPom(deployment) }

                        // To test deployment locally, use the following instead of oss.sonatype.org
                        //repository(url: "file://localhost/${rootProject.rootDir}/repo")

                        repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2') {
                            authentication(userName: rootProject.sonatypeUsername, password: rootProject.sonatypePassword)
                        }

                        // Prevent datastamp from being appending to artifacts during deployment
                        uniqueVersion = false

                        // Closure to configure all the POM with extra info, common to all projects
                        pom.project {
                            parent {
                                groupId 'org.sonatype.oss'
                                artifactId 'oss-parent'
                                version '7'
                            }
                            url 'https://github.com/Netflix/curator'
                            licenses {
                                license {
                                    name 'The Apache Software License, Version 2.0'
                                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                                    distribution 'repo'
                                }
                            }
                            scm {
                                connection 'scm:git:git@github.com:Netflix/curator.git'
                                url 'scm:git:git@github.com:Netflix/curator.git'
                                developerConnection 'scm:git:git@github.com:Netflix/curator.git'
                            }
                            issueManagement {
                                system 'github'
                                url 'https://github.com/Netflix/curator/issues'
                            }
                        }
                    }
                }
            }
        }

task aggregateJavadoc(type: Javadoc) {
    description = 'Aggregate all subproject docs into a single docs directory'
    source subprojects.collect {project -> project.sourceSets.main.allJava }
    classpath = files(subprojects.collect {project -> project.sourceSets.main.compileClasspath})
    destinationDir = new File(projectDir, 'doc')
}

project(':servo-core')
        {
            dependencies
                    {

                    }
        }

project(':servo-cloudwatch')
        {
            dependencies
                    {
                        compile project(':servo-core')
                        compile 'com.amazonaws:aws-java-sdk:[1.3,)'
                    }
        }



// Generate wrapper, which is distributed as part of source to alleviate the need of installing gradle
task createWrapper(type: Wrapper) {
    gradleVersion = '1.0-milestone-9'
}
